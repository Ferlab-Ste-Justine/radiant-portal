import{j as e}from"./jsx-runtime-Cf8x2fCZ.js";import{C as g}from"./conditional-wrapper-BBX8pIPQ.js";import{B as f}from"./badge-DdUfarqx.js";import{a as _,b as v,T as x}from"./tooltip-CWv3fgtm.js";import{u as y}from"./i18n-Bcw3INPB.js";import"./index-yBjzXJbu.js";import"./utils-CytzSlOG.js";import"./index-C66Dxnp2.js";import"./x-DA4wTodG.js";import"./createLucideIcon-DKFpjrVJ.js";import"./index-tvICUrOf.js";import"./index-Csi1vtvD.js";import"./index-_r67kdfS.js";import"./index-fNjTmf9T.js";import"./index-CJn4dinJ.js";import"./index-D-y1Urua.js";import"./index-DJkr1wGX.js";import"./index-pLOVI5Ig.js";import"./index-Bwb5bU54.js";import"./iframe-C8W9SauF.js";const c={other:"slate",association_not_found:"slate",uncertain_significance:"yellow",likely_benign:"lime",likely_pathogenic:"orange",_low_penetrance:"slate",low_penetrance:"slate",risk_factor:"slate",association:"slate",uncertain_risk_allele:"slate",pathogenic:"red",protective:"slate",conflicting_classifications_of_pathogenicity:"orange",conflicting_interpretations_of_pathogenicity:"yellow",not_provided:"slate",established_risk_allele:"slate",likely_risk_allele:"slate",drug_response:"slate",benign:"green",confers_sensitivity:"slate"};function r({value:t,abbreviated:i,...m}){const{t:s}=y(),n=t.toLowerCase(),d=c[n];return e.jsx(g,{condition:!!i,wrapper:u=>e.jsxs(_,{children:[e.jsx(v,{className:"flex",children:u}),e.jsx(x,{children:s(`variant.clinVars.${t}.tooltip`)})]}),children:e.jsx(f,{variant:d||"slate",...m,children:s(`variant.clinVars.${n}${i?".abbrev":""}`)})})}r.__docgenInfo={description:"",methods:[],displayName:"ClinVarBadge",props:{onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},closeIconProps:{required:!1,tsType:{name:"ReactHTMLAttributes",raw:"React.HTMLAttributes<SVGElement>",elements:[{name:"SVGElement"}]},description:""},value:{required:!0,tsType:{name:"string"},description:""},abbreviated:{required:!1,tsType:{name:"boolean"},description:""}},composes:["VariantProps"]};const D={title:"Feature/Variant/ClinVar Badge",component:r,args:{value:"other",variant:"slate"}},a={render:()=>e.jsx("div",{className:"flex flex-col gap-2 items-start",children:Object.keys(c).map(t=>e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx(r,{value:t}),e.jsx(r,{value:t,abbreviated:!0})]},t))})};var o,l,p;a.parameters={...a.parameters,docs:{...(o=a.parameters)==null?void 0:o.docs,source:{originalSource:`{
  render: () => {
    return <div className="flex flex-col gap-2 items-start">
        {Object.keys(ClinVarValueMap).map(key => <div className="flex items-center gap-2" key={key}>
            <ClinVarBadge value={key} />
            <ClinVarBadge value={key} abbreviated />
          </div>)}
      </div>;
  }
}`,...(p=(l=a.parameters)==null?void 0:l.docs)==null?void 0:p.source}}};const G=["Default"];export{a as Default,G as __namedExportsOrder,D as default};
