import{j as m}from"./jsx-runtime-Cf8x2fCZ.js";import{c}from"./utils-CytzSlOG.js";import{B as k}from"./button-UnRZVMn5.js";import{I}from"./input-BBA0CWHH.js";import{r as l}from"./index-tvICUrOf.js";import{c as C}from"./createLucideIcon-DKFpjrVJ.js";/**
 * @license lucide-react v0.482.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const S=[["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}],["path",{d:"m21 21-4.3-4.3",key:"1qie3q"}]],j=C("Search",S);function N({ref:t,className:d,wrapperClassName:f,type:v,onSearch:y,searchButtonProps:n,...i}){const r=l.useRef(null),[u,s]=l.useState(!1),[g,w]=l.useState(i.value),o=l.useCallback(async e=>{s(!0),await y(e),s(!1)},[]),x=l.useCallback(e=>{const a=r.current;a&&(e.key==="Enter"&&(e.preventDefault(),a.value!==""&&o(a.value)),e.key==="Escape"&&a.blur())},[r.current]);return m.jsxs("div",{className:c("flex items-center w-full",f),children:[m.jsx(I,{type:v,className:c("rounded-r-none focus:z-[2]",d),...i,onKeyDown:e=>{var a;x(e),(a=i.onKeyDown)==null||a.call(i,e)},onChange:e=>{var a;w(e.target.value),(a=i.onChange)==null||a.call(i,e)},ref:e=>{r.current=e,typeof t=="function"?t(e):t&&"current"in t&&(t.current=e)}}),m.jsx(k,{...n,variant:"default",loading:u||(n==null?void 0:n.loading),className:c("h-9 px-3 shadow-sm rounded-l-none ml-[-1px] hover:z-[2]",n==null?void 0:n.className),onClick:()=>o(g),children:!(n!=null&&n.loading)&&!u&&m.jsx(j,{})})]})}N.__docgenInfo={description:"",methods:[],displayName:"InputSearch",props:{onSearch:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void | Promise<void>",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"union",raw:"void | Promise<void>",elements:[{name:"void"},{name:"Promise",elements:[{name:"void"}],raw:"Promise<void>"}]}}},description:""},searchButtonProps:{required:!1,tsType:{name:"Omit",elements:[{name:"ButtonProps"},{name:"literal",value:"'onClick'"}],raw:"Omit<ButtonProps, 'onClick'>"},description:""},ref:{required:!1,tsType:{name:"ReactRef",raw:"React.Ref<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},description:""},wrapperClassName:{required:!1,tsType:{name:"string"},description:""}}};export{N as I};
